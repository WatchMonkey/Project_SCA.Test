//******************************************************************
// 
//  Generated by e*ORB IDL to C++ Translator
//  
//  File name: DataFile_s.h
//  Source: DataFile.idl
//  Generated: Fri Feb 05 11:36:55 2021
//  eORB C++ V2.1.9
//  
//******************************************************************
#ifndef _DATAFILE_S_H_
#define _DATAFILE_S_H_


#include "eOrb/idl_s.h"
#include "DataFile.h"
#include "CFOctetSeq_s.h"


namespace POA_Data
{
   class ProcessedData
   :
      virtual public PortableServer::ServantBase
   {
   public:

      virtual const char * _repository_id () const;
      CORBA::Boolean _is_a (const char * id);
      Data::ProcessedData_ptr _this (EORB_ENV_ARG1);

      virtual void pushProcessedData (const CF::OctetSeq& pkt EORB_ENV_ARGN) = 0;

   protected:
      static void _dispatch_pushProcessedData
      (
         void * _servant_,
         EORB::Codec::Request & _request_
         EORB_ENV_ARGN
      );
      virtual EORB::Codec::DispatchFN _invoke (EORB::Codec::Request & _req_ EORB_ENV_ARGN);
   };

   class OpenData
   :
      virtual public PortableServer::ServantBase
   {
   public:

      virtual const char * _repository_id () const;
      CORBA::Boolean _is_a (const char * id);
      Data::OpenData_ptr _this (EORB_ENV_ARG1);

      virtual void pushOpenData (const CF::OctetSeq& pkt EORB_ENV_ARGN) = 0;

   protected:
      static void _dispatch_pushOpenData
      (
         void * _servant_,
         EORB::Codec::Request & _request_
         EORB_ENV_ARGN
      );
      virtual EORB::Codec::DispatchFN _invoke (EORB::Codec::Request & _req_ EORB_ENV_ARGN);
   };

   class EncryptedData
   :
      virtual public PortableServer::ServantBase
   {
   public:

      virtual const char * _repository_id () const;
      CORBA::Boolean _is_a (const char * id);
      Data::EncryptedData_ptr _this (EORB_ENV_ARG1);

      virtual void pushEncryptedData (const CF::OctetSeq& pkt EORB_ENV_ARGN) = 0;

   protected:
      static void _dispatch_pushEncryptedData
      (
         void * _servant_,
         EORB::Codec::Request & _request_
         EORB_ENV_ARGN
      );
      virtual EORB::Codec::DispatchFN _invoke (EORB::Codec::Request & _req_ EORB_ENV_ARGN);
   };

   class MhalData
   :
      virtual public PortableServer::ServantBase
   {
   public:

      virtual const char * _repository_id () const;
      CORBA::Boolean _is_a (const char * id);
      Data::MhalData_ptr _this (EORB_ENV_ARG1);

      virtual void pushMhalData (const CF::OctetSeq& pkt EORB_ENV_ARGN) = 0;

   protected:
      static void _dispatch_pushMhalData
      (
         void * _servant_,
         EORB::Codec::Request & _request_
         EORB_ENV_ARGN
      );
      virtual EORB::Codec::DispatchFN _invoke (EORB::Codec::Request & _req_ EORB_ENV_ARGN);
   };

}

#endif
