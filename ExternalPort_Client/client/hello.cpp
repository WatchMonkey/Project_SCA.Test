//******************************************************************
// 
//  Generated by e*ORB IDL to C++ Translator
//  
//  File name: hello.cpp
//  Source: hello.idl
//  Generated: Wed Feb 03 16:01:47 2021
//  eORB C++ V2.1.9
//  
//******************************************************************

#include "hello.h"



char * 
GreetingService_stub::greeting (const char* greetstr EORB_ENV_ARGN)
{
   static const EORB::OpMeta _md_ ("greeting", 0, 3810948u, 9u, 1u, 1u, 0u);
   CORBA::String _ret_ = 0;
   EORB::Codec::ParamPut _in_[1] =
   {
      { CORBA::_tc_string, &greetstr, CORBA::PARAM_IN }
   };
   EORB::Codec::ParamGet _out_[1] =
   {
      { CORBA::_tc_string, &_ret_, CORBA::PARAM_OUT }
   };

   invoke_request (_md_, _in_, _out_ EORB_ENV_VARN);
   return _ret_;
}

void 
GreetingService_stub::shutdown (EORB_ENV_ARG1)
{
   static const EORB::OpMeta _md_ ("shutdown", 0, 470122733u, 9u, 0u, 0u, 0u);
   invoke_request (_md_, 0, 0 EORB_ENV_VARN);
}

GreetingService_ptr GreetingService::_duplicate (GreetingService_ptr p)
{
   if (p) p->m_count++;
   return p;
}

CORBA::Boolean GreetingService::_is_a (const char * _id)
{
   if (strcmp (_id, this->_repository_id ()) == 0)
   {
      return true;
   }

   return false;
}

GreetingService_ptr GreetingService::_narrow (CORBA::Object_ptr p EORB_ENV_ARGN)
{
   GreetingService_ptr result = 0;
   if (p && p->_is_a (_repository_id () EORB_ENV_VARN))
   {
      result = new GreetingService_stub (p);
   }
   return result;
}

GreetingService_ptr GreetingService::_unchecked_narrow (CORBA::Object_ptr p)
{
   GreetingService_ptr result = 0;
   result = new GreetingService_stub (p);
   return result;
}

void GreetingService::_assert_stub (GreetingService_ptr & obj )
{
   if (CORBA::is_nil (obj)) obj = new GreetingService_stub ();
}

GreetingService_stub::GreetingService_stub (IOP::IOR_ptr ior) :
   CORBA::Object (ior)
{
}

GreetingService_stub::GreetingService_stub (CORBA::Object_ptr p) :
   CORBA::Object (*p)
{
}



static void * GreetingService_ctor ()
{
   return (CORBA::Object_ptr) new GreetingService_stub ();
}

static void GreetingService_dtor (void * arg)
{
   CORBA::release ((CORBA::Object_ptr) arg);
}

static void GreetingService_copy (void * dest, void * src)
{
   ((CORBA::Object_ptr)dest)->set_ior (((CORBA::Object_ptr)src)->get_ior ());
}

CORBA::TypeCode_ptr _tc_GreetingService;

class hello_plugin : public EORB::TCPlugin
{
public:

   hello_plugin () { EORB::TCManager::manager().add (this); };

   virtual void init (EORB_ENV_ARG1)
   {
      _tc_GreetingService = CORBA::TypeCode::build_typecode
      (
         CORBA::tk_objref,
         GreetingService_ctor,
         GreetingService_dtor,
         (CORBA::TypeCode::PutFunc) 0,
         (CORBA::TypeCode::GetFunc) 0,
         GreetingService_copy,
         0, 0, 0,
         0,
         0, false
      );
   }

   virtual ~hello_plugin ()
   {
      CORBA::release (_tc_GreetingService);
   }
};

static hello_plugin eorbhello_plugin;

