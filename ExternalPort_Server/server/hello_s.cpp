//******************************************************************
// 
//  Generated by e*ORB IDL to C++ Translator
//  
//  File name: hello_s.cpp
//  Source: hello.idl
//  Generated: Fri Feb 05 11:23:39 2021
//  eORB C++ V2.1.9
//  
//******************************************************************
#include "hello_s.h"

const char * POA_GreetingService::_repository_id () const
{
   return (const char*) "IDL:GreetingService:1.0";
}

GreetingService_ptr POA_GreetingService::_this (EORB_ENV_ARG1)
{
   CORBA::Object_var obj (_this_ ());
   return (GreetingService::_narrow (obj.in () EORB_ENV_VARN));
}

CORBA::Boolean POA_GreetingService::_is_a (const char * _id)
{
   if (strcmp (_id, "IDL:GreetingService:1.0") == 0)
   {
      return true;
   }

   return false;
}

void POA_GreetingService::_dispatch_shutdown
(
   void * _servant_,
   EORB::Codec::Request & _request_
   EORB_ENV_ARGN
)
{
   POA_GreetingService * _srv_ = (POA_GreetingService*) _servant_;

   _request_.get_args (0, 0UL);

   _srv_->shutdown ();
   EORB_CHECK_ENV_RETURN_VOID;

   if (_request_.reply_expected ())
   {
      _request_.put_args (0, 0UL);
      _request_.send_reply ();
   }
}

void POA_GreetingService::_dispatch_greeting
(
   void * _servant_,
   EORB::Codec::Request & _request_
   EORB_ENV_ARGN
)
{
   POA_GreetingService * _srv_ = (POA_GreetingService*) _servant_;
   CORBA::String greetstr;
   CORBA::String_var _ret_;

   EORB::Codec::ParamGet _out_[1] =
   {
      { CORBA::_tc_string, &greetstr, CORBA::PARAM_IN }
   };
   _request_.get_args (_out_, 1UL);

   _ret_ = _srv_->greeting (*(CORBA::String*)_out_[0].m_value EORB_ENV_VARN);
   EORB_CHECK_ENV_RETURN_VOID;

   if (_request_.reply_expected ())
   {
      EORB::Codec::ParamPut _in_[1] =
      {
         { CORBA::_tc_string, &_ret_.val (), CORBA::PARAM_OUT }
      };
      _request_.put_args (_in_, 1UL);
      _request_.send_reply ();
   }
}

EORB::Codec::DispatchFN POA_GreetingService::_invoke (EORB::Codec::Request & _req EORB_ENV_ARGN)
{
   void * ptr = this;
   EORB::Codec::DispatchFN disp = (EORB::Codec::DispatchFN) 0;

   switch (_req.opname()[0])
   {
      case 'g':
         disp = POA_GreetingService::_dispatch_greeting;
         break;
      case 's':
         disp = POA_GreetingService::_dispatch_shutdown;
         break;
   }
   if (disp) (*disp) (ptr, _req EORB_ENV_VARN);
   return disp;
}



