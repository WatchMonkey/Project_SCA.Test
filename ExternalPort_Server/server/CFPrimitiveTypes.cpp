//******************************************************************
// 
//  Generated by e*ORB IDL to C++ Translator
//  
//  File name: CFPrimitiveTypes.cpp
//  Source: CFPrimitiveTypes.idl
//  Generated: Fri Feb 05 11:36:43 2021
//  eORB C++ V2.1.9
//  
//******************************************************************

#include "CFPrimitiveTypes.h"




CORBA::TypeCode_ptr CF::_tc_BooleanType;

CORBA::TypeCode_ptr CF::_tc_CharType;

CORBA::TypeCode_ptr CF::_tc_LongLongType;

CORBA::TypeCode_ptr CF::_tc_LongType;

CORBA::TypeCode_ptr CF::_tc_ShortType;

CORBA::TypeCode_ptr CF::_tc_ULongLongType;

CORBA::TypeCode_ptr CF::_tc_ULongType;

CORBA::TypeCode_ptr CF::_tc_UShortType;

CORBA::TypeCode_ptr CF::_tc_FloatType;

CORBA::TypeCode_ptr CF::_tc_DoubleType;

CORBA::TypeCode_ptr CF::_tc_StringType;

CORBA::TypeCode_ptr CF::_tc_OctetType;

class CFPrimitiveTypes_plugin : public EORB::TCPlugin
{
public:

   CFPrimitiveTypes_plugin () { EORB::TCManager::manager().add (this); };

   virtual void init (EORB_ENV_ARG1)
   {
      CF::_tc_BooleanType = CORBA::TypeCode::build_typecode
      (
         CORBA::tk_boolean,
         0,
         0,
         0,
         0,
         0,
         0, 0, 0,
         0,
         0, false
      );
      CF::_tc_CharType = CORBA::TypeCode::build_typecode
      (
         CORBA::tk_char,
         0,
         0,
         0,
         0,
         0,
         1, 1, 0,
         0,
         0, false
      );
      CF::_tc_LongLongType = CORBA::TypeCode::build_typecode
      (
         CORBA::tk_longlong,
         0,
         0,
         0,
         0,
         0,
         8, 8, 0,
         0,
         0, false
      );
      CF::_tc_LongType = CORBA::TypeCode::build_typecode
      (
         CORBA::tk_long,
         0,
         0,
         0,
         0,
         0,
         4, 4, 0,
         0,
         0, false
      );
      CF::_tc_ShortType = CORBA::TypeCode::build_typecode
      (
         CORBA::tk_short,
         0,
         0,
         0,
         0,
         0,
         2, 2, 0,
         0,
         0, false
      );
      CF::_tc_ULongLongType = CORBA::TypeCode::build_typecode
      (
         CORBA::tk_ulonglong,
         0,
         0,
         0,
         0,
         0,
         8, 8, 0,
         0,
         0, false
      );
      CF::_tc_ULongType = CORBA::TypeCode::build_typecode
      (
         CORBA::tk_ulong,
         0,
         0,
         0,
         0,
         0,
         4, 4, 0,
         0,
         0, false
      );
      CF::_tc_UShortType = CORBA::TypeCode::build_typecode
      (
         CORBA::tk_ushort,
         0,
         0,
         0,
         0,
         0,
         2, 2, 0,
         0,
         0, false
      );
      CF::_tc_FloatType = CORBA::TypeCode::build_typecode
      (
         CORBA::tk_float,
         0,
         0,
         0,
         0,
         0,
         4, 4, 0,
         0,
         0, false
      );
      CF::_tc_DoubleType = CORBA::TypeCode::build_typecode
      (
         CORBA::tk_double,
         0,
         0,
         0,
         0,
         0,
         8, 8, 0,
         0,
         0, false
      );
      CF::_tc_StringType = CORBA::TypeCode::build_typecode
      (
         CORBA::tk_string,
         0,
         0,
         0,
         0,
         0,
         0, 4, 0,
         0,
         0, false
      );
      CF::_tc_OctetType = CORBA::TypeCode::build_typecode
      (
         CORBA::tk_octet,
         0,
         0,
         0,
         0,
         0,
         1, 1, 0,
         0,
         0, false
      );
   }

   virtual ~CFPrimitiveTypes_plugin ()
   {
      CORBA::release (CF::_tc_BooleanType);
      CORBA::release (CF::_tc_CharType);
      CORBA::release (CF::_tc_LongLongType);
      CORBA::release (CF::_tc_LongType);
      CORBA::release (CF::_tc_ShortType);
      CORBA::release (CF::_tc_ULongLongType);
      CORBA::release (CF::_tc_ULongType);
      CORBA::release (CF::_tc_UShortType);
      CORBA::release (CF::_tc_FloatType);
      CORBA::release (CF::_tc_DoubleType);
      CORBA::release (CF::_tc_StringType);
      CORBA::release (CF::_tc_OctetType);
   }
};

static CFPrimitiveTypes_plugin eorbCFPrimitiveTypes_plugin;

