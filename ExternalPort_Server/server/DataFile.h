//******************************************************************
// 
//  Generated by e*ORB IDL to C++ Translator
//  
//  File name: DataFile.h
//  Source: DataFile.idl
//  Generated: Fri Feb 05 11:36:55 2021
//  eORB C++ V2.1.9
//  
//******************************************************************
#ifndef _DATAFILE_H_
#define _DATAFILE_H_

#include "eOrb/idl_c.h"
#include "CFOctetSeq.h"

namespace Data
{

   class ProcessedData;

   typedef ProcessedData * ProcessedData_ptr;
   typedef EORBInterface_var < ProcessedData> ProcessedData_var;
   typedef EORBInterface_out < ProcessedData> ProcessedData_out;
   typedef EORBInterface_mgr < ProcessedData> ProcessedData_mgr;


   class OpenData;

   typedef OpenData * OpenData_ptr;
   typedef EORBInterface_var < OpenData> OpenData_var;
   typedef EORBInterface_out < OpenData> OpenData_out;
   typedef EORBInterface_mgr < OpenData> OpenData_mgr;


   class EncryptedData;

   typedef EncryptedData * EncryptedData_ptr;
   typedef EORBInterface_var < EncryptedData> EncryptedData_var;
   typedef EORBInterface_out < EncryptedData> EncryptedData_out;
   typedef EORBInterface_mgr < EncryptedData> EncryptedData_mgr;


   class MhalData;

   typedef MhalData * MhalData_ptr;
   typedef EORBInterface_var < MhalData> MhalData_var;
   typedef EORBInterface_out < MhalData> MhalData_out;
   typedef EORBInterface_mgr < MhalData> MhalData_mgr;

   class ProcessedData
   :
      virtual public CORBA::Stub
   { 
   public:
      typedef ProcessedData_ptr (*ProcessedDataFactory) (IOP::IOR_ptr ior);
      typedef ProcessedData_ptr _ptr_type;
      typedef ProcessedData_var _var_type;
      typedef ProcessedData_out _out_type;

      static ProcessedData_ptr _duplicate (ProcessedData_ptr obj);
      CORBA::Boolean _is_a (const char * id);

      static ProcessedData_ptr _narrow (CORBA::Object_ptr obj EORB_ENV_ARGN);
      static ProcessedData_ptr _unchecked_narrow (CORBA::Object_ptr obj);
      static ProcessedData_ptr _nil () { return 0; }
      static const char * _repository_id () { return "IDL:Data/ProcessedData:1.0"; }
      static void _assert_stub (ProcessedData_ptr & obj);
      ProcessedData_ptr _this () { return this; }

      virtual void pushProcessedData (const ::CF::OctetSeq& pkt EORB_ENV_ARGN) = 0;

   protected:
      ProcessedData () {}
      ~ProcessedData () {}
   private:
      ProcessedData (const ProcessedData &) {}
      ProcessedData & operator = (const ProcessedData &);
   };

   class ProcessedData_stub
   :
      virtual public ProcessedData
   {
   public:
      ProcessedData_stub (IOP::IOR_ptr ior = 0);
      ProcessedData_stub (CORBA::Object_ptr p);
      ~ProcessedData_stub () {}

      // Stub operations

      virtual void pushProcessedData (const ::CF::OctetSeq& pkt EORB_ENV_ARGN);
   };

   extern CORBA::TypeCode_ptr _tc_ProcessedData;

   class OpenData
   :
      virtual public CORBA::Stub
   { 
   public:
      typedef OpenData_ptr (*OpenDataFactory) (IOP::IOR_ptr ior);
      typedef OpenData_ptr _ptr_type;
      typedef OpenData_var _var_type;
      typedef OpenData_out _out_type;

      static OpenData_ptr _duplicate (OpenData_ptr obj);
      CORBA::Boolean _is_a (const char * id);

      static OpenData_ptr _narrow (CORBA::Object_ptr obj EORB_ENV_ARGN);
      static OpenData_ptr _unchecked_narrow (CORBA::Object_ptr obj);
      static OpenData_ptr _nil () { return 0; }
      static const char * _repository_id () { return "IDL:Data/OpenData:1.0"; }
      static void _assert_stub (OpenData_ptr & obj);
      OpenData_ptr _this () { return this; }

      virtual void pushOpenData (const ::CF::OctetSeq& pkt EORB_ENV_ARGN) = 0;

   protected:
      OpenData () {}
      ~OpenData () {}
   private:
      OpenData (const OpenData &) {}
      OpenData & operator = (const OpenData &);
   };

   class OpenData_stub
   :
      virtual public OpenData
   {
   public:
      OpenData_stub (IOP::IOR_ptr ior = 0);
      OpenData_stub (CORBA::Object_ptr p);
      ~OpenData_stub () {}

      // Stub operations

      virtual void pushOpenData (const ::CF::OctetSeq& pkt EORB_ENV_ARGN);
   };

   extern CORBA::TypeCode_ptr _tc_OpenData;

   class EncryptedData
   :
      virtual public CORBA::Stub
   { 
   public:
      typedef EncryptedData_ptr (*EncryptedDataFactory) (IOP::IOR_ptr ior);
      typedef EncryptedData_ptr _ptr_type;
      typedef EncryptedData_var _var_type;
      typedef EncryptedData_out _out_type;

      static EncryptedData_ptr _duplicate (EncryptedData_ptr obj);
      CORBA::Boolean _is_a (const char * id);

      static EncryptedData_ptr _narrow (CORBA::Object_ptr obj EORB_ENV_ARGN);
      static EncryptedData_ptr _unchecked_narrow (CORBA::Object_ptr obj);
      static EncryptedData_ptr _nil () { return 0; }
      static const char * _repository_id () { return "IDL:Data/EncryptedData:1.0"; }
      static void _assert_stub (EncryptedData_ptr & obj);
      EncryptedData_ptr _this () { return this; }

      virtual void pushEncryptedData (const ::CF::OctetSeq& pkt EORB_ENV_ARGN) = 0;

   protected:
      EncryptedData () {}
      ~EncryptedData () {}
   private:
      EncryptedData (const EncryptedData &) {}
      EncryptedData & operator = (const EncryptedData &);
   };

   class EncryptedData_stub
   :
      virtual public EncryptedData
   {
   public:
      EncryptedData_stub (IOP::IOR_ptr ior = 0);
      EncryptedData_stub (CORBA::Object_ptr p);
      ~EncryptedData_stub () {}

      // Stub operations

      virtual void pushEncryptedData (const ::CF::OctetSeq& pkt EORB_ENV_ARGN);
   };

   extern CORBA::TypeCode_ptr _tc_EncryptedData;

   class MhalData
   :
      virtual public CORBA::Stub
   { 
   public:
      typedef MhalData_ptr (*MhalDataFactory) (IOP::IOR_ptr ior);
      typedef MhalData_ptr _ptr_type;
      typedef MhalData_var _var_type;
      typedef MhalData_out _out_type;

      static MhalData_ptr _duplicate (MhalData_ptr obj);
      CORBA::Boolean _is_a (const char * id);

      static MhalData_ptr _narrow (CORBA::Object_ptr obj EORB_ENV_ARGN);
      static MhalData_ptr _unchecked_narrow (CORBA::Object_ptr obj);
      static MhalData_ptr _nil () { return 0; }
      static const char * _repository_id () { return "IDL:Data/MhalData:1.0"; }
      static void _assert_stub (MhalData_ptr & obj);
      MhalData_ptr _this () { return this; }

      virtual void pushMhalData (const ::CF::OctetSeq& pkt EORB_ENV_ARGN) = 0;

   protected:
      MhalData () {}
      ~MhalData () {}
   private:
      MhalData (const MhalData &) {}
      MhalData & operator = (const MhalData &);
   };

   class MhalData_stub
   :
      virtual public MhalData
   {
   public:
      MhalData_stub (IOP::IOR_ptr ior = 0);
      MhalData_stub (CORBA::Object_ptr p);
      ~MhalData_stub () {}

      // Stub operations

      virtual void pushMhalData (const ::CF::OctetSeq& pkt EORB_ENV_ARGN);
   };

   extern CORBA::TypeCode_ptr _tc_MhalData;

}





#endif 
